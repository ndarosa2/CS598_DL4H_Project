-------------------------------------------------------------DIAGNOSES PREDICTION-----------------------------------------------------------
----------------------FFN CUI Only------------------------------
# Diagnoses Prediction - TUI: Beta, Threshold:0.9, CUI Only, Number of Epochs:5000, kFolds:5  
python 02_FFN_diagprediction.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=5000 --kFold=5

Train Epoch: 4999 [9000/9743 (92%)]	Loss: 
tensor(0.1005, device='cuda:0')
Train Epoch: 4999 [9200/9743 (94%)]	Loss: 
tensor(0.1000, device='cuda:0')
Train Epoch: 4999 [9400/9743 (96%)]	Loss: 
tensor(0.0887, device='cuda:0')
Train Epoch: 4999 [9600/9743 (98%)]	Loss: 
tensor(0.0942, device='cuda:0')
/home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/diagnoses_prediction/02_FFN_diagprediction.py:223: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data, target = Variable(data, volatile=True), Variable(target, volatile=True)
Scores for each fold:
Precision: [[0.7545155993431856, 0.6921182266009852, 0.6432676518883416], [0.7491789819376026, 0.6826765188834154, 0.6294471811713191], [0.7614942528735632, 0.6888341543513957, 0.6416256157635468], [0.7408624229979466, 0.6817248459958932, 0.6349075975359343], [0.7429158110882957, 0.6854209445585215, 0.6379192334017796]]
Recall: [[0.3958153890324433, 0.5785601492965834, 0.6916810221073787], [0.38572331904728446, 0.5690297196655659, 0.6838333450432095], [0.3906122882105338, 0.5743341233065685, 0.6874535743341234], [0.39307951048450585, 0.5768983038717527, 0.6890431546554069], [0.3918242099322799, 0.5763614559819413, 0.6894398984198645]]
AUROC: [0.9111442372252068, 0.9101056673370209, 0.9104749529750059, 0.9108773421881794, 0.9115328500235826]
Average scores:
Precision@1: 0.7497934136481187
Precision@2: 0.6861549380780423
Precision@3: 0.6374334559521844
Recall@10: 0.3914109433414095
Recall@20: 0.5750367504244823
Recall@30: 0.6882901989119966
AUROC: 0.9108270099497991
235330269

# Diagnoses Prediction - TUI: Alpha, Threshold:0.9, CUI Only, Number of Epochs:5000, kFolds:1  
Train Epoch: 4999 [9000/9742 (92%)]	Loss: 
tensor(0.0987, device='cuda:0')
Train Epoch: 4999 [9200/9742 (94%)]	Loss: 
tensor(0.1036, device='cuda:0')
Train Epoch: 4999 [9400/9742 (96%)]	Loss: 
tensor(0.1000, device='cuda:0')
Train Epoch: 4999 [9600/9742 (98%)]	Loss: 
tensor(0.1000, device='cuda:0')
/home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/diagnoses_prediction/02_FFN_diagprediction.py:223: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data, target = Variable(data, volatile=True), Variable(target, volatile=True)
Scores for each fold:
Precision: [[0.7344006568144499, 0.673440065681445, 0.6282156540777231]]
Recall: [[0.38278037714447755, 0.5653268112859776, 0.6794980859208847]]
AUROC: [0.9088755793882719]
Average scores:
Precision@1: 0.7344006568144499
Precision@2: 0.673440065681445
Precision@3: 0.6282156540777231
Recall@10: 0.38278037714447755
Recall@20: 0.5653268112859776
Recall@30: 0.6794980859208847


# Diagnoses Prediction - TUI: Beta, Threshold:0.9, CCI Only, Number of Epochs:5000, kFolds:1 RUN 1
Train Epoch: 4999 [9000/9742 (92%)]	Loss: 
tensor(0.0968, device='cuda:0')
Train Epoch: 4999 [9200/9742 (94%)]	Loss: 
tensor(0.1023, device='cuda:0')
Train Epoch: 4999 [9400/9742 (96%)]	Loss: 
tensor(0.0973, device='cuda:0')
Train Epoch: 4999 [9600/9742 (98%)]	Loss: 
tensor(0.0930, device='cuda:0')
/home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/diagnoses_prediction/02_FFN_diagprediction.py:223: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data, target = Variable(data, volatile=True), Variable(target, volatile=True)
Scores for each fold:
Precision: [[0.7520525451559934, 0.6822660098522167, 0.6319102353585112]]
Recall: [[0.39069086232764166, 0.5774808887618775, 0.6891833964420947]]
AUROC: [0.9113469880422574]
Average scores:
Precision@1: 0.7520525451559934
Precision@2: 0.6822660098522167
Precision@3: 0.6319102353585112
Recall@10: 0.39069086232764166
Recall@20: 0.5774808887618775
Recall@30: 0.6891833964420947
AUROC: 0.9113469880422574
Total Parameters: 235330269 # addition to original code 

---------------------FFN CUI + CCS ------------------------------
# Diagnoses Prediction - TUI: Beta, Threshold:0.9, CUI+CCS, Number of Epochs:5000, kFolds:5  
python 02_FFN_diagprediction.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=5000 --kFold=5 --withCCS=1

Train Epoch: 4999 [9000/9743 (92%)]	Loss: 
tensor(0.0831, device='cuda:0')
Train Epoch: 4999 [9200/9743 (94%)]	Loss: 
tensor(0.0867, device='cuda:0')
Train Epoch: 4999 [9400/9743 (96%)]	Loss: 
tensor(0.0962, device='cuda:0')
Train Epoch: 4999 [9600/9743 (98%)]	Loss: 
tensor(0.0919, device='cuda:0')
/home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/diagnoses_prediction/02_FFN_diagprediction.py:223: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data, target = Variable(data, volatile=True), Variable(target, volatile=True)
Scores for each fold:
Precision: [[0.7803776683087028, 0.722495894909688, 0.6781609195402298], [0.7692939244663383, 0.7200328407224958, 0.6721401204159825], [0.7783251231527094, 0.7247536945812808, 0.6758347016967706], [0.7802874743326489, 0.7203285420944558, 0.6735112936344969], [0.7819301848049282, 0.724435318275154, 0.6747433264887064]]
Recall: [[0.41877957482873085, 0.6029380605974998, 0.7123737552087012], [0.4130481359805742, 0.5933438080274247, 0.7027924582202543], [0.41372111948483886, 0.6002901319746665, 0.7084881293564024], [0.41303958445280314, 0.5945190757657174, 0.7061436503671861], [0.40994401211310255, 0.5922743758583049, 0.7016796366069228]]
AUROC: [0.9177368262525611, 0.9149054525337819, 0.9170518966900791, 0.9155528720936307, 0.9152707713476687]
Average scores:
Precision@1: 0.7780428750130656
Precision@2: 0.7224092581166148
Precision@3: 0.6748780723552373
Recall@10: 0.41370648537200994
Recall@20: 0.5966730904447226
Recall@30: 0.7062955259518934
AUROC: 0.9161035637835443
238020269

---------------------FFN CCS Only ------------------------------
# Diagnoses Prediction - TUI: Beta, Threshold:0.9, CCS Only, Number of Epochs:5000, kFolds:5  
time python 02_FFN_diagprediction_CCS_Only.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=5000 --kFold=5 --withCCS=1

Train Epoch: 4999 [9000/9743 (92%)]	Loss: 
tensor(0.1214, device='cuda:0')
Train Epoch: 4999 [9200/9743 (94%)]	Loss: 
tensor(0.1103, device='cuda:0')
Train Epoch: 4999 [9400/9743 (96%)]	Loss: 
tensor(0.1157, device='cuda:0')
Train Epoch: 4999 [9600/9743 (98%)]	Loss: 
tensor(0.1186, device='cuda:0')
/home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/diagnoses_prediction/02_FFN_diagprediction_CCS_Only.py:225: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data, target = Variable(data, volatile=True), Variable(target, volatile=True)
Scores for each fold:
Precision: [[0.7327586206896551, 0.6945812807881774, 0.6518883415435139], [0.7249589490968801, 0.6791871921182266, 0.6328680897646415], [0.7261904761904762, 0.6890394088669951, 0.6522988505747126], [0.7383983572895277, 0.6963039014373716, 0.6553045859000685], [0.7182751540041068, 0.6897330595482546, 0.6440793976728268]]
Recall: [[0.3986402306624426, 0.5774748157904104, 0.6844409639411954], [0.39522565405676247, 0.5732436204860242, 0.6785369170752658], [0.3949049031582621, 0.5663235037515267, 0.6698307450706683], [0.3942257217847769, 0.5675940507436571, 0.6726859142607174], [0.3988420481273747, 0.5714492491405826, 0.6774742174778361]]
AUROC: [0.9088881686881376, 0.9072882712607829, 0.9050343657924604, 0.904730204614692, 0.9064493820017542]
Average scores:
Precision@1: 0.7281163114541291
Precision@2: 0.6897689685518051
Precision@3: 0.6472878530911527
Recall@10: 0.3963677115579237
Recall@20: 0.5712170479824402
Recall@30: 0.6765937515651366
AUROC: 0.9064780784715655
Total Number of Parameters: 5390269

real	45m41.929s
user	45m21.199s
sys	0m29.970s

# Diagnoses Prediction - TUI: Beta, Threshold:0.9, CCS Only, Number of Epochs:2000, kFolds:5  
time python 02_FFN_diagprediction_CCS_Only.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=2000 --kFold=5 --withCCS=1 --hiddenDimSize=2000
Train Epoch: 1999 [9000/9743 (92%)]	Loss: 
tensor(0.1267, device='cuda:0')
Train Epoch: 1999 [9200/9743 (94%)]	Loss: 
tensor(0.1255, device='cuda:0')
Train Epoch: 1999 [9400/9743 (96%)]	Loss: 
tensor(0.1330, device='cuda:0')
Train Epoch: 1999 [9600/9743 (98%)]	Loss: 
tensor(0.1287, device='cuda:0')
/home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/diagnoses_prediction/02_FFN_diagprediction_CCS_Only.py:225: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data, target = Variable(data, volatile=True), Variable(target, volatile=True)
Scores for each fold:
Precision: [[0.6658456486042693, 0.6268472906403941, 0.5972906403940886], [0.6732348111658456, 0.6342364532019704, 0.6000273672687466], [0.6798029556650246, 0.6389573070607554, 0.5978379857690203], [0.6759753593429159, 0.6492813141683779, 0.6113620807665983], [0.675564681724846, 0.6484599589322382, 0.6053388090349076]]
Recall: [[0.37154551052193124, 0.5375058857618893, 0.6443188815241406], [0.36584505800627665, 0.5309778200923869, 0.6382453542085404], [0.3652557319223986, 0.5332275132275133, 0.6366490299823633], [0.3684005109281862, 0.5334941810956572, 0.6400085154697701], [0.36711624467373316, 0.5344226502799592, 0.641652287213438]]
AUROC: [0.8890221287277787, 0.8893120423483343, 0.8857164859745833, 0.8891513553033268, 0.8886534218350548]
Average scores:
Precision@1: 0.6740846913005802
Precision@2: 0.6395564648007472
Precision@3: 0.6023713766466723
Recall@10: 0.36763261121050517
Recall@20: 0.5339256100914811
Recall@30: 0.6401748136796506
AUROC: 0.8883710868378156
Total Number of Parameters: 1078269

real	18m55.843s
user	18m45.794s
sys	0m13.271s


--------------GRU CUI Only----------------------
# GRU Training Run 1 - TUI: Beta, Threshold:0.9, CUI Only, Number of Epochs:1500, kFolds:1 RUN 1 --- Produces model_ouput.pt, X-test.data, and Y-test.data
time python 02_GRU_train_GPU.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=1500

Train Epoch: 1499 [6460/6583 (98%)]	Loss: 
tensor(0.0025, device='cuda:0')
Train Epoch: 1499 [6480/6583 (98%)]	Loss: 
tensor(0.0040, device='cuda:0')
Train Epoch: 1499 [6500/6583 (99%)]	Loss: 
tensor(0.0050, device='cuda:0')
Train Epoch: 1499 [6520/6583 (99%)]	Loss: 
tensor(0.0043, device='cuda:0')
Train Epoch: 1499 [6540/6583 (99%)]	Loss: 
tensor(0.0056, device='cuda:0')
Train Epoch: 1499 [6560/6583 (100%)]	Loss: 
tensor(0.0038, device='cuda:0')

# GRU Testing Run 1- TUI: Beta, Threshold:0.9, CUI Only
python 03_GRU_test.py --Xinputdata=X-test.data --Yinputdata=Y-test.data --inputModel=model_output.pt
Dataset with : 731 patients. Y: 731
Each patient has : 41 admissions. Y: 41
X_dataset_shape= torch.Size([731, 41, 23263])
Y_dataset_shape= torch.Size([731, 41, 269])
P@ 1 = 0.4661087866108787
P@ 2 = 0.44184100418410044
P@ 3 = 0.4256624825662483
R@ 10 = 0.2585400425230333
R@ 20 = 0.4107016300496102
R@ 30 = 0.5265768958185684
ROC Average Score: 0.8565521275530967

# GRU Training Run 2 - TUI: Beta, Threshold:0.9, CUI Only, Number of Epochs:1500, kFolds:1 RUN 1 --- Produces model_ouput.pt, X-test.data, and Y-test.data
time python 02_GRU_train_GPU.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=1500

Train Epoch: 1499 [6500/6583 (99%)]	Loss: 
tensor(0.0048, device='cuda:0')
Train Epoch: 1499 [6520/6583 (99%)]	Loss: 
tensor(0.0039, device='cuda:0')
Train Epoch: 1499 [6540/6583 (99%)]	Loss: 
tensor(0.0055, device='cuda:0')
Train Epoch: 1499 [6560/6583 (100%)]	Loss: 
tensor(0.0037, device='cuda:0')

real	102m43.360s
user	101m43.584s
sys	0m35.621s

# GRU Testing Run 2- TUI: Beta, Threshold:0.9, CUI Only
time python 03_GRU_test.py --Xinputdata=X-test.data --Yinputdata=Y-test.data --inputModel=model_output.pt

Dataset with : 731 patients. Y: 731
Each patient has : 41 admissions. Y: 41
X_dataset_shape= torch.Size([731, 41, 23263])
Y_dataset_shape= torch.Size([731, 41, 269])
P@ 1 = 0.5248756218905473
P@ 2 = 0.5004145936981758
P@ 3 = 0.4640685461580984
R@ 10 = 0.2880325993708893
R@ 20 = 0.4493136974549614
R@ 30 = 0.5647698026880184
ROC Average Score: 0.8707874593103225
Total Number of Parameters: 14133069

real	0m32.266s
user	1m45.867s
sys	0m17.094s

--------------GRU CUI + CCS----------------------
# GRU Training Run 1 - TUI: Beta, Threshold:0.9, CUI+CCS, Number of Epochs:1500, kFolds:1 RUN 1 --- Produces model_ouput.pt, X-test.data, and Y-test.data
time python 02_GRU_train_GPU.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=1500 --withCCS=1

tensor(0.0023, device='cuda:0')
Train Epoch: 1499 [6500/6583 (99%)]	Loss: 
tensor(0.0022, device='cuda:0')
Train Epoch: 1499 [6520/6583 (99%)]	Loss: 
tensor(0.0040, device='cuda:0')
Train Epoch: 1499 [6540/6583 (99%)]	Loss: 
tensor(0.0048, device='cuda:0')
Train Epoch: 1499 [6560/6583 (100%)]	Loss: 
tensor(0.0035, device='cuda:0')

real	89m55.342s
user	88m55.694s
sys	0m32.963s


# GRU Testing Run 1- TUI: Beta, Threshold:0.9, CUI + CCS
time python 03_GRU_test.py --Xinputdata=X-test.data --Yinputdata=Y-test.data --inputModel=model_output.pt

Dataset with : 731 patients. Y: 731
Each patient has : 41 admissions. Y: 41
X_dataset_shape= torch.Size([731, 41, 23532])
Y_dataset_shape= torch.Size([731, 41, 269])
P@ 1 = 0.5129533678756477
P@ 2 = 0.5056131260794473
P@ 3 = 0.47294185377086934
R@ 10 = 0.30657662497122246
R@ 20 = 0.467807535875988
R@ 30 = 0.5778528125239812
ROC Average Score: 0.8750478227469088
Total Number of Parameters: 14294469

real	0m31.629s
user	1m42.713s
sys	0m17.162s

# GRU Training Run 2 - TUI: Beta, Threshold:0.9, CUI+CCS, Number of Epochs:1500, kFolds:1 RUN 1 --- Produces model_ouput.pt, X-test.data, and Y-test.data
time python 02_GRU_train_GPU.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=1500 --withCCS=1

Train Epoch: 1499 [6500/6583 (99%)]	Loss: 
tensor(0.0029, device='cuda:0')
Train Epoch: 1499 [6520/6583 (99%)]	Loss: 
tensor(0.0042, device='cuda:0')
Train Epoch: 1499 [6540/6583 (99%)]	Loss: 
tensor(0.0030, device='cuda:0')
Train Epoch: 1499 [6560/6583 (100%)]	Loss: 
tensor(0.0066, device='cuda:0')

real	92m29.288s
user	91m20.205s
sys	0m36.770s

# GRU Testing Run 2- TUI: Beta, Threshold:0.9, CUI + CCS
time python 03_GRU_test.py --Xinputdata=X-test.data --Yinputdata=Y-test.data --inputModel=model_output.pt

Dataset with : 731 patients. Y: 731
Each patient has : 41 admissions. Y: 41
X_dataset_shape= torch.Size([731, 41, 23532])
Y_dataset_shape= torch.Size([731, 41, 269])
P@ 1 = 0.5933977455716586
P@ 2 = 0.5442834138486312
P@ 3 = 0.5099302200751477
R@ 10 = 0.3115147361206306
R@ 20 = 0.4736120630568883
R@ 30 = 0.5920493488690884
ROC Average Score: 0.8789943262491922
Total Number of Parameters: 14294469

real	0m31.692s
user	1m45.859s
sys	0m16.576s

--------------LSTM CUI Only----------------------
# LSTM Training Run 1 - TUI: Beta, Threshold:0.9, CUI Only, Number of Epochs:1500, kFolds:1 RUN 1 --- Produces model_ouput.pt, X-test.data, and Y-test.data
time python 02_LSTM_train_GPU.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=1500

Train Epoch: 1499 [6500/6583 (99%)]	Loss: 
tensor(0.0022, device='cuda:0')
Train Epoch: 1499 [6520/6583 (99%)]	Loss: 
tensor(0.0056, device='cuda:0')
Train Epoch: 1499 [6540/6583 (99%)]	Loss: 
tensor(0.0032, device='cuda:0')
Train Epoch: 1499 [6560/6583 (100%)]	Loss: 
tensor(0.0034, device='cuda:0')

real	118m22.140s
user	117m13.555s
sys	0m38.152s

# LSTM Testing Run 1- TUI: Beta, Threshold:0.9, CUI Only
python 03_LSTM_test.py --Xinputdata=X-test.data --Yinputdata=Y-test.data --inputModel=model_output.pt

Dataset with : 731 patients. Y: 731
Each patient has : 41 admissions. Y: 41
X_dataset_shape= torch.Size([731, 41, 23263])
Y_dataset_shape= torch.Size([731, 41, 269])
P@ 1 = 0.5592680986475735
P@ 2 = 0.5214797136038186
P@ 3 = 0.4897905064969504
R@ 10 = 0.3150029019152641
R@ 20 = 0.4732298316889147
R@ 30 = 0.579802669762043
ROC Average Score: 0.8641561899702174

# LSTM Training Run 2 - TUI: Beta, Threshold:0.9, CUI Only, Number of Epochs:1500, kFolds:1 RUN 2 --- Produces model_ouput.pt, X-test.data, and Y-test.data
time python 02_LSTM_train_GPU.py --inputdata=diag_prepared_data_beta_09.npz --nEpochs=1500

Train Epoch: 1499 [6500/6583 (99%)]	Loss: 
tensor(0.0020, device='cuda:0')
Train Epoch: 1499 [6520/6583 (99%)]	Loss: 
tensor(0.0029, device='cuda:0')
Train Epoch: 1499 [6540/6583 (99%)]	Loss: 
tensor(0.0013, device='cuda:0')
Train Epoch: 1499 [6560/6583 (100%)]	Loss: 
tensor(0.0019, device='cuda:0')

real	120m0.735s
user	118m54.479s
sys	0m36.295s

# LSTM Testing Run 1- TUI: Beta, Threshold:0.9, CUI Only
python 03_LSTM_test.py --Xinputdata=X-test.data --Yinputdata=Y-test.data --inputModel=model_output.pt

Dataset with : 731 patients. Y: 731
Each patient has : 41 admissions. Y: 41
X_dataset_shape= torch.Size([731, 41, 23263])
Y_dataset_shape= torch.Size([731, 41, 269])
P@ 1 = 0.565180102915952
P@ 2 = 0.5218696397941681
P@ 3 = 0.489136649514008
R@ 10 = 0.2961472110408281
R@ 20 = 0.44918056354226565
R@ 30 = 0.55556354226567
ROC Average Score: 0.8619478409377244


--------------------------------------------MORTALITY PREDICTION----------------------------------------------------------

----------FFN CCI+CCS-------------

# FFN - TUI: Beta, Threshold:0.9, CUI+CCS, Number of Epochs:5000, kFolds:5, lr: 0.01. hiddenDimSize: 10000  RUN 1
time python 02_FFN_mortality.py --inputdata=mort_prepared_data_beta_09.npz --inputdata2=mort_prepared_data_deathTime_beta_09.npz --nEpochs=5000 --kFold=5 --lr=0.01 --withCCS=1

Train Epoch: 4999 [2400/3196 (75%)]	Loss: 
tensor(1.9372e-05, device='cuda:0')
Train Epoch: 4999 [2600/3196 (81%)]	Loss: 
tensor(2.4637e-08, device='cuda:0')
Train Epoch: 4999 [2800/3196 (88%)]	Loss: 
tensor(0.0009, device='cuda:0')
Train Epoch: 4999 [3000/3196 (94%)]	Loss: 
tensor(0., device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.8531294244881215
AUC_scores:  [0.8314375827005528, 0.8232786974937577, 0.8730442774473227, 0.8252093806280808, 0.8531294244881215]
Mean:  0.841219872551567
Total Number of Parameters: 165680003

real	308m12.443s
user	307m35.239s
sys	0m39.402s

# FFN - TUI: Beta, Threshold:0.9, CUI+CCS, Number of Epochs:100, kFolds:5, lr: 0.001. hiddenDimSize: 50 batchSize:50  RUN 1
time python 02_FFN_mortality.py --inputdata=mort_prepared_data_beta_09.npz --inputdata2=mort_prepared_data_deathTime_beta_09.npz --hiddenDimSize=50 --batchSize=50 --nEpochs=100 --kFold=5 --lr=0.001 --withCCS=1
Train Epoch: 99 [2800/3196 (88%)]	Loss: 
tensor(0.0024, device='cuda:0')
Train Epoch: 99 [2900/3196 (91%)]	Loss: 
tensor(0.0004, device='cuda:0')
Train Epoch: 99 [3000/3196 (94%)]	Loss: 
tensor(0.0133, device='cuda:0')
Train Epoch: 99 [3100/3196 (97%)]	Loss: 
tensor(0.0024, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.8748534933415169
AUC_scores:  [0.8567832490518595, 0.8704996191520703, 0.8538765236893111, 0.8542436397564585, 0.8748534933415169]
Mean:  0.8620513049982431
Total Number of Parameters: 828403

real	0m53.462s
user	0m51.854s
sys	0m1.673s


----------GRU CCI+CCS-------------
# GRU - TUI: Beta, Threshold:0.9, CUI+CCS Only, Number of Epochs:1500, kFolds:5

# GRU - TUI: Beta, Threshold:0.9, CUI+CCS Only, Number of Epochs:1500, kFolds:1 RUN 1
Train Epoch: 1499 [1060/1136 (93%)]	Loss: 
tensor(1.9985e-08, device='cuda:0')
Train Epoch: 1499 [1080/1136 (95%)]	Loss: 
tensor(5.8436e-09, device='cuda:0')
Train Epoch: 1499 [1100/1136 (96%)]	Loss: 
tensor(1.0752e-08, device='cuda:0')
Train Epoch: 1499 [1120/1136 (98%)]	Loss: 
tensor(4.7917e-09, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.9195400204111386
AUC_scores:  [0.9195400204111386]
Mean:  0.9195400204111386

# GRU - TUI: Beta, Threshold:0.9, CUI+CCS Only, Number of Epochs:1500, kFolds:1 RUN 2
Train Epoch: 1499 [1060/1136 (93%)]	Loss: 
tensor(3.5062e-10, device='cuda:0')
Train Epoch: 1499 [1080/1136 (95%)]	Loss: 
tensor(0., device='cuda:0')
Train Epoch: 1499 [1100/1136 (96%)]	Loss: 
tensor(4.1489e-08, device='cuda:0')
Train Epoch: 1499 [1120/1136 (98%)]	Loss: 
tensor(0., device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.9303092611862642
AUC_scores:  [0.9303092611862642]
Mean:  0.9303092611862642

# GRU - TUI: Beta, Threshold:0.9, CUI+CCS Only, Number of Epochs:1500, kFolds:1 RUN 3
Train Epoch: 1499 [1060/1136 (93%)]	Loss: 
tensor(0., device='cuda:0')
Train Epoch: 1499 [1080/1136 (95%)]	Loss: 
tensor(1.1570e-08, device='cuda:0')
Train Epoch: 1499 [1100/1136 (96%)]	Loss: 
tensor(1.1687e-10, device='cuda:0')
Train Epoch: 1499 [1120/1136 (98%)]	Loss: 
tensor(8.1810e-09, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.9153804687499999
AUC_scores:  [0.9153804687499999]
Mean:  0.9153804687499999

# GRU - TUI: Beta, Threshold:0.9, CUI+CCS Only, Number of Epochs:1500, kFolds:1 RUN 4
Train Epoch: 1499 [1060/1136 (93%)]	Loss: 
tensor(1.0518e-08, device='cuda:0')
Train Epoch: 1499 [1080/1136 (95%)]	Loss: 
tensor(4.9086e-09, device='cuda:0')
Train Epoch: 1499 [1100/1136 (96%)]	Loss: 
tensor(2.3842e-08, device='cuda:0')
Train Epoch: 1499 [1120/1136 (98%)]	Loss: 
tensor(1.9751e-08, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.9323920231954524
AUC_scores:  [0.9323920231954524]
Mean:  0.9323920231954524

# GRU - TUI: Beta, Threshold:0.9, CUI+CCS Only, Number of Epochs:1500, kFolds:1 RUN 5
Train Epoch: 1499 [1060/1136 (93%)]	Loss: 
tensor(0.0005, device='cuda:0')
Train Epoch: 1499 [1080/1136 (95%)]	Loss: 
tensor(0.0008, device='cuda:0')
Train Epoch: 1499 [1100/1136 (96%)]	Loss: 
tensor(4.6703e-05, device='cuda:0')
Train Epoch: 1499 [1120/1136 (98%)]	Loss: 
tensor(2.2439e-08, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.9352672281536679
AUC_scores:  [0.9352672281536679]
Mean:  0.9352672281536679

MEAN AUC_ROC for the 5 Runs = 0.926577

----------GRU CCI Only-------------
# GRU - TUI: Beta, Threshold:0.9, CUI Only, Number of Epochs:1500, kFolds:1 RUN 1



--------------------------------------------READMISSION PREDICTION----------------------------------------------------------
----Prepare Data----
cd /home/nick/Documents/UIUC/CS_598_Deep_Learning_for_Healthcare/Project/Paper_111/patient_trajectory_prediction-master/PyTorch_scripts/readmission_prediction
time python 01_data_prep_readmission.py --admissions_file ADMISSIONS.csv --diagnoses_file DIAGNOSES_ICD.csv --notes_file post_processed_output_beta_09.csv

-Number of valid admissions (the ones with, at least, one note): 58361
Cleaning up admissions without notes
-Number of admissions without notes: 589
-Number of admissions after cleaning: 58361
-Number of subjects after cleaning: 46445
Building Map: hadm_id to set of ICD9 codes from DIAGNOSES_ICD
-Number of null ICD9 codes in file DIAGNOSES_ICD.csv: 47
-Number of valid admissions (at least one diagnosis): 58929
Cleaning up admissions without diagnoses
-Number of admissions without diagnosis: 29
-Number of admissions after cleaning: 58929
-Number of subjects without admissions: 0
-Number of subjects after cleaning: 46445
Building Map: subject_id to admission-ordered (admittime, Note) and cleaning one-admission-only patients
-Number of discarded subjects with less than two admissions: 39131
-Number of subjects after ordering: 7314
Converting database CUI ids to sequential integer ids
Converting database CCS ids to sequential integer ids
Writing patients notes read from files post_processed_output_beta_09.csv
-Final number of subjects notes for training: 7314
-Final number of admissions for training: 19492

real	0m43.244s
user	0m42.670s
sys	0m0.472s


------FFN CUI Only---------
time python 02_FFN_readmission.py --inputdata=readmit_prepared_data_beta_09.npz --hiddenDimSize=10000 --batchSize=100 --nEpochs=5000 --kFold=5 --lr=0.001 --withCCS=0

Train Epoch: 4999 [9000/9743 (92%)]	Loss: 
tensor(0.0068, device='cuda:0')
Train Epoch: 4999 [9200/9743 (94%)]	Loss: 
tensor(0.0058, device='cuda:0')
Train Epoch: 4999 [9400/9743 (96%)]	Loss: 
tensor(0.0066, device='cuda:0')
Train Epoch: 4999 [9600/9743 (98%)]	Loss: 
tensor(0.0051, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.6763405273500283
AUC_scores:  [0.6813096303262953, 0.6719815968416578, 0.6718583266639988, 0.6742224126032222, 0.6763405273500283]
Mean:  0.6751424987570405
Total Number of Parameters: 235340001

real	546m41.783s
user	545m46.538s
sys	0m59.355s


time python 02_FFN_readmission.py --inputdata=readmit_prepared_data_beta_09.npz --hiddenDimSize=50 --batchSize=100 --nEpochs=100 --kFold=5 --lr=0.001 --withCCS=0

Run 1
Train Epoch: 99 [9000/9743 (92%)]	Loss: 
tensor(0.5836, device='cuda:0')
Train Epoch: 99 [9200/9743 (94%)]	Loss: 
tensor(0.5621, device='cuda:0')
Train Epoch: 99 [9400/9743 (96%)]	Loss: 
tensor(0.6028, device='cuda:0')
Train Epoch: 99 [9600/9743 (98%)]	Loss: 
tensor(0.5845, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.6964427411321774
AUC_scores:  [0.7039787831739791, 0.7121999333087629, 0.7056896768515026, 0.7164455209308398, 0.6964427411321774]
Mean:  0.7069513310794523
Total Number of Parameters: 1176701

real	2m11.615s
user	2m7.520s
sys	0m4.127s

Run 2 
Train Epoch: 99 [9000/9743 (92%)]	Loss: 
tensor(0.5686, device='cuda:0')
Train Epoch: 99 [9200/9743 (94%)]	Loss: 
tensor(0.5924, device='cuda:0')
Train Epoch: 99 [9400/9743 (96%)]	Loss: 
tensor(0.5176, device='cuda:0')
Train Epoch: 99 [9600/9743 (98%)]	Loss: 
tensor(0.6275, device='cuda:0')
Training done - deleting variables and starting test
ROC Average Score: 0.7116626428723531
AUC_scores:  [0.6993200577055831, 0.7025864941635687, 0.6931631854839833, 0.7216958858262943, 0.7116626428723531]
Mean:  0.7056856532103565
Total Number of Parameters: 1176701

real	2m18.235s
user	2m14.157s
sys	0m4.064s

----------FFN CCS Only---------------


----------FFN CUI + CCS------------


----------GRU CUI + CCS-----------

time python 02_GRU_readmission.py --inputdata=readmit_prepared_data_beta_09.npz --hiddenDimSize=200 --batchSize=10 --nEpochs=100 --kFold=5 --lr=0.01 --withCCS=1







